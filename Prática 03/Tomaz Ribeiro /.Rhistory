ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
round(defaultSummary(lm_prediction), digits = 3)
round(defaultSummary(lm_de_resultados), digits = 3)
#Graficos boxpot dosdados comoartilhado somente na semana e os dados do fim de semana
require(dplyr)
require(reshape2)
require(ggplot2)
require(caret)
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /")
forestfire <- read.csv("forestfires.csv",header = TRUE)
forestfire <- forestfire%>%select(-day,-month)
forestfire$log.Y <- log(forestfire$Y)
forestfire$log.DC <- log(forestfire$DC + 1)
forestfire$log.RH <- log(forestfire$RH)
forestfire$log.wind <- log(forestfire$wind)
forestfire$log.area <- log(forestfire$area + 1)
trainidex <- createDataPartition(y = forestfire$log.area,p = .75,list = FALSE)
train <- forestfire[trainidex,]
test <- forestfire[-trainidex,]
fitControl <- trainControl(method = "cv",number = 10)
lm <- lm(log.area~FFMC+temp+DMC+log.DC+log.wind+X+log.Y+RH,data = forestfire)
lm
summary(lm)
predicton <- predict(lm, select(test,FFMC,temp,DMC,log.DC,log.wind,X,log.Y,RH))
exp.prediction <- exp(predicton)- 1
lm_prediction <- data.frame(pred = exp.prediction, obs = test$area )
ggplot(lm_prediction,aes(x = pred, y = obs))+geom_point(alpha = 0.5,position = position_jitter(width = 0.2))+geom_abline(colour  = "red")+ggtitle("Previsão X Observado(validação)")
#RMSE
round(defaultSummary(lm_prediction),digits = 3)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = treino)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide
+ total.sulfur.dioxide + density + pH + sulphates
+ alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,
volatile.acidity, citric.acid
, residual.sugar, chlorides
, free.sulfur.dioxide
, total.sulfur.dioxide
, density, pH, sulphates
, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")+geom_smooth(method="lm")
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
coef(lm)      # Coeficientes do modelo (intercepto e beta)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
coef(lm)      # Coeficientes do modelo (intercepto e beta)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
require(dplyr)
require(reshape2)
library(corrplot)
require(ggplot2)
require(caret)
#Leitura de todo o Dataset
setwd("/home/tomaz/Documentos/R\ Teste/Tomaz\ Bisneto\ /Atividade\ 3/")
whiteWine <- read.csv("winequality-white.csv",header = TRUE, sep = ";")
#Separação do dataSet em Treino e Teste
indice <- createDataPartition(whiteWine$quality, p = 0.75, list = FALSE)
treino <- whiteWine[indice,]
teste <- whiteWine[-indice,]
# Resposta 1 - Gráfico da matriz de correlação
matrix <- cor(whiteWine)
print(matrix)
corrplot(matrix)#Grafico com a amostra completa
corrplot(matrix,diag = FALSE)# Visão eliminando Diagonal Principal
corrplot(matrix, method = "circle", type = "lower", order = "hclust")#Grafico de Matriz de Correlação
# Resposta 2 - Treinamento de modelo (Cross Validation)
fitControl <- trainControl(method = "cv", number = 10)
lm <- lm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides + free.sulfur.dioxide+ total.sulfur.dioxide + density + pH + sulphates + alcohol, data = whiteWine)
#summary(lm)
coef(lm)      # Coeficientes do modelo (intercepto e beta)
resultado <- predict(lm, select(teste, fixed.acidity,volatile.acidity, citric.acid, residual.sugar, chlorides, free.sulfur.dioxide, total.sulfur.dioxide, density, pH, sulphates, alcohol))
lm_de_resultados <- data.frame(pred = resultado, obs = teste$quality)
#print(lm_de_resultados)
# Resposta 3 - Gráfico de Previsão x Observado
ggplot(lm_de_resultados, aes(x = pred, y = obs)) +
geom_point(alpha = 0.5, position = position_jitter(width = 0.2)) +
geom_abline(colour = "red") +
ggtitle("Previsão x Observado")
# Resposta 4 - Valor do RMSE
round(defaultSummary(lm_de_resultados), digits = 3)
